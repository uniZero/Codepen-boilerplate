//---------//
// Imports //
//---------//

@import "compass";

//--------------------------//
// Responsive media queries //
//--------------------------//

@mixin breakpoint($point) {

	// -- With inheritance -- //

	@if $point == widescreen {
		@media (min-width: 1224px) { @content; } }
	@else if $point == desktop {
		@media (min-width: 769px) { @content; } }
	@else if $point == tablet {
		@media (min-width: 481px) { @content; } }
	@else if $point == mobile {
		@media (min-width: 0px)  { @content; } }
	@else if $point == mini {
		@media (max-width: 480px) { @content; } }

	// -- No inheritance -- //

	@if $point == widescreen-only {
		@media (min-width: 1224px) { @content; } }
	@else if $point == desktop-only {
		@media (min-width: 769px) and (max-width: 1223px) { @content; } }
	@else if $point == tablet-only {
		@media (min-width: 481px) and (max-width: 768px) { @content; } }
	@else if $point == mobile-only {
		@media (min-width: 261px) and (max-width: 480px)  { @content; } }

}

//-------------------//
// Spacing variables //
//-------------------//

$gap: 12px;
$gap-half: $gap/2;
$gap-double: $gap*2;

//------------------------//
// Spacing helper classes //
//------------------------//

.flush-children-y {
	& > :first-child { margin-top: 0 !important; }
	& > :last-child { margin-bottom: 0 !important; }
}

@mixin gap-p($gm: $gap-half, $gt: $gap, $gd: $gap-double) {
	@extend .flush-children-y;
  @include breakpoint(mobile)     { padding: $gm; }
	@include breakpoint(tablet)     { padding: $gt; }
	@include breakpoint(desktop)    { padding: $gd; }
}

@mixin gap-p-y($gm: $gap-half, $gt: $gap, $gd: $gap-double) {
	@extend .flush-children-y;
	@include breakpoint(mobile)     { padding-top: $gm; padding-bottom: $gm; }
	@include breakpoint(tablet)     { padding-top: $gt; padding-bottom: $gt; }
	@include breakpoint(desktop)    { padding-top: $gd; padding-bottom: $gd; }
}

@mixin gap-p-x($gm: $gap-half, $gt: $gap, $gd: $gap-double) {
	@include breakpoint(mobile)     { padding-left: $gm; padding-right: $gm; }
	@include breakpoint(tablet)     { padding-left: $gt; padding-right: $gt; }
	@include breakpoint(desktop)    { padding-left: $gd; padding-right: $gd; }
}

@mixin gap-m($gm: $gap-half, $gt: $gap, $gd: $gap-double) {
	@include breakpoint(mobile)     { margin: $gm; }
	@include breakpoint(tablet)     { margin: $gt; }
	@include breakpoint(desktop)    { margin: $gd; }
}

@mixin gap-m-y($gm: $gap-half, $gt: $gap, $gd: $gap-double) {
	@include breakpoint(mobile)     { margin-top: $gm; margin-bottom: $gm; }
	@include breakpoint(tablet)     { margin-top: $gt; margin-bottom: $gt; }
	@include breakpoint(desktop)    { margin-top: $gd; margin-bottom: $gd; }
}

@mixin gap-m-x($gm: $gap-half, $gt: $gap, $gd: $gap-double) {
	@include breakpoint(mobile)     { margin-left: $gm; margin-right: $gm; }
	@include breakpoint(tablet)     { margin-left: $gt; margin-right: $gt; }
	@include breakpoint(desktop)    { margin-left: $gd; margin-right: $gd; }
}


// -- #TODO
// @mixin gap-m-y
// @mixin gap-m-x

//-----------------//
// Color variables //
//-----------------//

$base-white: #fdfcfa;
$base-black: #080808;

$light:    shade($base-white,15);
$lighter:  shade($base-white,10);
$lightest: shade($base-white,5);

$dark:    scale-lightness($base-black,15);
$darker:  scale-lightness($base-black,10);
$darkest: scale-lightness($base-black,5);

// Core settings //

$color-shade-mod: 1; // -2 through 2 , negative #'s shade - positive #'s brighten
$color-white-tint: 90;
$color-black-tint: -80;
$color-saturation: 0;
$color-bw-saturation: -90;
$color-gray-saturation: -90;

// Base color options //

$red:    #DF151A; 
$orange: #FD8603; 
$yellow: #FFDD00; 
$green:  #90D228; 
$blue:   #1693A5; 
$indigo: #3A3862; 
$violet: #270F3D; 

// Color options //

$color-a: $indigo;
$color-b: $green;
$color-c: $blue;
$color-d: $red;

//----------------//
// Color settings //
//----------------//

$background-color: $base-black;

//----------------------//
// Typography variables //
//----------------------//

$font-stack-a: Arial, "Helvetica Neue", Helvetica, sans-serif;
$font-stack-b: "Arial Black", "Arial Bold", Gadget, sans-serif;
$base-font-size: 14px;
$base-line-height: 8px;
$round-to-nearest-half-line: false;

//------------//
// Base rules //
//------------//

html, body { margin: 0; padding: 0; }
* { @include box-sizing(border-box); }
img { width: 100%; max-width: 100%; }

//-----//
// ... //
//-----//

body {
	background: $background-color;
	text-rendering: optimizeLegibility;
	font-size: 100%; -webkit-text-size-adjust: 100%;
	font-family: $font-stack-a;
}

//----------//
// Sort us! //
//----------//

$temp-height: auto;

.light-base {
	background: $base-white;
	color: $dark;
	width: 100%; height: $temp-height;
}
.light {
	background: $light;
	color: $darker;
	width: 100%; height: $temp-height;
}
.lighter {
	background: $lighter;
	color: $darkest;
	width: 100%; height: $temp-height;
}
.lightest {
	background: $lightest;
	color: $base-black;
	width: 100%; height: $temp-height;
}
.dark-base {
	background: $base-black;
	color: $base-white;
	width: 100%; height: $temp-height;
}
.dark {
	background: $dark;
	color: $lighter;
	width: 100%; height: $temp-height;
}
.darker {
	background: $darker;
	color: $lightest;
	width: 100%; height: $temp-height;
}
.darkest {
	background: $darkest;
	color: $light;
	width: 100%; height: $temp-height;
}

//----------------------//
// Typography functions //
//----------------------//

@function emify($target, $context) {
   @if $target == 0 { @return 0 }
   @return $target / $context + 0em;
}

// Make px to ems using base-font-size 
// echo as: font-size: em-font(#px);

@function em-font($target, $context: $base-font-size) {
   @return emify($target, $context);
}


// Make px to ems using base-line-height 
// echo as: font-size: em-base(#px);

@function em-base($target, $context: $base-line-height) {
   @return emify($target, $context);
}

//--------------------------//
// Typography base settings //
//--------------------------//

h1 { 
	@include adjust-font-size-to(36px); 
	margin: 0 0 rhythm(3, 36px) 0; } 

h2 { 
	@include adjust-font-size-to(30px); 
	margin: rhythm(4, 30px) 0 rhythm(2, 30px) 0; }

h3 { 
	@include adjust-font-size-to(22px); 
	margin: rhythm(4, 22px) 0 rhythm(2, 22px) 0; } 

h4 { 
	@include adjust-font-size-to(20px); 
	margin: 0 0 rhythm(1, 20px) 0; } 

h5 { 
	@include adjust-font-size-to(18px); 
	margin: 0 0 rhythm(1, 18px) 0; } 

h6 { 
	@include adjust-font-size-to(16px); 
	margin: 0 0 rhythm(1, 16px) 0; }

p, pre, label { 
	@include adjust-font-size-to(16px); 
	margin: 0 0 rhythm(2, 16px) 0; }

ol, ul {
	@include adjust-font-size-to(16px);
	margin: 0 0 rhythm(4, 16px) 0; }

li { line-height: auto; }

//--------------------//
// Typography mixins //
//--------------------//

@mixin unordered {
	 list-style-position: outside; 
	 list-style-type: disc; }

@mixin unordered-inside {
	 list-style-position: inside; 
	 list-style-type: disc; }

@mixin ordered {
	list-style-position: outside; 
	list-style-type: decimal; }

@mixin ordered-inside {
	list-style-position: inside; 
	list-style-type: decimal; }

@mixin nobullet { list-style-type: none; }

//--------------------------//
// Typography core settings //
//--------------------------//

ul 			{ @include unordered; }
ol 			{ @include ordered;	}
strong, b 	{ font-weight: 600; }
em, i, q 	{ font-style: italic; }

blockquote {
	padding-left: em-font(16px);
	border-left: em-font(5px) solid grey;
	line-height: normal;
	margin: 0;
	& p {
		font-style: italic;
		margin: 0;
		@include adjust-font-size-to(20px); 
		margin: rhythm(3, 20px) 0 rhythm(3, 20px) 0;
	}
}

//-----------//
// Smart row //
//-----------//

.smart-row {
  overflow: auto;
  @for $i from 1 through 16 {
    & span:first-child:nth-last-child(#{$i}),
    & span:first-child:nth-last-child(#{$i}) ~ span {
      float: left;
      width: ( 100% / $i );
      @include breakpoint(mobile-only) { width: 100%; }
    }
  } 
}

.smart-row.va-middle {
  display: table;
  @for $i from 1 through 16 {
    & span:first-child:nth-last-child(#{$i}),
    & span:first-child:nth-last-child(#{$i}) ~ span {
      @include breakpoint(mobile-only) { width: 100%; }
      @include breakpoint(tablet) {
        display: table-cell;
        vertical-align: middle;
        float: none;
      }
    }
  } 
}

//---------------------------//
// Flush positioning helpers //
//---------------------------//

.flush-top {
	margin-top: 0 !important;
}

.flush-bottom {
	margin-bottom: 0 !important;
}

//------------------------------//
// Figure image caption helpers //
//------------------------------//

figure img { vertical-align: bottom; }

figure.caption-outside {
	& figcaption {
		background: rgba(black,0.25);
	}
}

figure.caption-inside {
	position: relative;
	& figcaption {
		background: rgba(white,0.75);
		position: absolute;
		bottom: 0;
		left: 0; right: 0;
	}
}

//------------------------//
// Definition list toggle //
//------------------------//

dl.toggle dt {
  cursor: pointer;
}

dl.toggle dd {
  display: none;
  margin: 0;
}

//---------------------------------------------------------//
// Center child in container where height/width is unknown //
//---------------------------------------------------------//

.centered-parent {
  height: auto;
  width: 100%;
  background: gray;
  text-align: center;
  overflow: hidden;
  &:before {
    content: '';
    display: inline-block;
    height: 100%; 
    vertical-align: middle;
    margin-right: -0.25em; /* Adjusts for spacing */
  }
}

.centered-child {
  display: inline-block;
  vertical-align: middle;
  width: auto;
  margin: auto;
}

//------------------------------------------//
// Cover element with another on mouse over //
//------------------------------------------//

.hover-overlay-parent {
  position: relative;
  background: blue;
  height: 200px;
}

.hover-overlay-parent:hover {
  & .hover-overlay {
    display: block;
  }
}

.hover-overlay-parent .hover-overlay {
  background: rgba(orange,0.75);
  position: absolute;
  top: 0; bottom: 0;
  left: 0; right: 0;
  display: none;
}

// test

.page-wrap > div {
  @include gap-p;
}

//-------//
// Color //
//-------//

// Colors //

$red-wh   : scale-lightness($red,   20);
$orange-wh: scale-lightness($orange,20);
$yellow-wh: scale-lightness($yellow,20);
$green-wh : scale-lightness($green, 20);
$blue-wh  : scale-lightness($blue,  20);
$indigo-wh: scale-lightness($indigo,20);
$violet-wh: scale-lightness($violet,20);

$red-bl   : shade($red,   15);
$orange-bl: shade($orange,15);
$yellow-bl: shade($yellow,15);
$green-bl : shade($green, 15);
$blue-bl  : shade($blue,  15);
$indigo-bl: shade($indigo,15);
$violet-bl: shade($violet,15);

$color-a-1: $color-a;
$color-a-1: adjust-saturation($color-a-1, $color-saturation);
$color-a-2: scale-lightness($color-a-1,(10*$color-shade-mod));
$color-a-3: scale-lightness($color-a-1,(20*$color-shade-mod));
$color-a-4: scale-lightness($color-a-1,(30*$color-shade-mod));
$color-a-5: scale-lightness($color-a-1,(40*$color-shade-mod));
$color-a-6: scale-lightness($color-a-1,(50*$color-shade-mod));
$color-a-wh: scale-lightness(adjust-saturation($color-a-1,$color-bw-saturation), $color-black-tint);
$color-a-bl: scale-lightness(adjust-saturation($color-a-1,$color-bw-saturation), $color-white-tint);
$color-a-gr-1: shade(adjust-saturation($color-a-1,$color-gray-saturation),16);
$color-a-gr-2: shade(adjust-saturation($color-a-1,$color-gray-saturation),33);
$color-a-gr-3: shade(adjust-saturation($color-a-1,$color-gray-saturation),50);
$color-a-gr-4: shade(adjust-saturation($color-a-1,$color-gray-saturation),60);

$color-b-1: $color-b;
$color-b-1: adjust-saturation($color-b-1, $color-saturation);
$color-b-2: scale-lightness($color-b-1,(10*$color-shade-mod));
$color-b-3: scale-lightness($color-b-1,(20*$color-shade-mod));
$color-b-4: scale-lightness($color-b-1,(30*$color-shade-mod));
$color-b-5: scale-lightness($color-b-1,(40*$color-shade-mod));
$color-b-6: scale-lightness($color-b-1,(50*$color-shade-mod));
$color-b-wh: scale-lightness(adjust-saturation($color-b-1,$color-bw-saturation), $color-black-tint);
$color-b-bl: scale-lightness(adjust-saturation($color-b-1,$color-bw-saturation), $color-white-tint);
$color-b-gr-1: shade(adjust-saturation($color-b-1,$color-gray-saturation),16);
$color-b-gr-2: shade(adjust-saturation($color-b-1,$color-gray-saturation),33);
$color-b-gr-3: shade(adjust-saturation($color-b-1,$color-gray-saturation),50);
$color-b-gr-4: shade(adjust-saturation($color-b-1,$color-gray-saturation),60);

$color-c-1: $color-c;
$color-c-1: adjust-saturation($color-c-1, $color-saturation);
$color-c-2: scale-lightness($color-c-1,(10*$color-shade-mod));
$color-c-3: scale-lightness($color-c-1,(20*$color-shade-mod));
$color-c-4: scale-lightness($color-c-1,(30*$color-shade-mod));
$color-c-5: scale-lightness($color-c-1,(40*$color-shade-mod));
$color-c-6: scale-lightness($color-c-1,(50*$color-shade-mod));
$color-c-wh: scale-lightness(adjust-saturation($color-c-1,$color-bw-saturation), $color-black-tint);
$color-c-bl: scale-lightness(adjust-saturation($color-c-1,$color-bw-saturation), $color-white-tint);
$color-c-gr-1: shade(adjust-saturation($color-c-1,$color-gray-saturation),16);
$color-c-gr-2: shade(adjust-saturation($color-c-1,$color-gray-saturation),33);
$color-c-gr-3: shade(adjust-saturation($color-c-1,$color-gray-saturation),50);
$color-c-gr-4: shade(adjust-saturation($color-c-1,$color-gray-saturation),60);

$color-d-1: $color-d;
$color-d-1: adjust-saturation($color-d-1, $color-saturation);
$color-d-2: scale-lightness($color-d-1,(10*$color-shade-mod));
$color-d-3: scale-lightness($color-d-1,(20*$color-shade-mod));
$color-d-4: scale-lightness($color-d-1,(30*$color-shade-mod));
$color-d-5: scale-lightness($color-d-1,(40*$color-shade-mod));
$color-d-6: scale-lightness($color-d-1,(50*$color-shade-mod));
$color-d-wh: scale-lightness(adjust-saturation($color-d-1,$color-bw-saturation), $color-black-tint);
$color-d-bl: scale-lightness(adjust-saturation($color-d-1,$color-bw-saturation), $color-white-tint);
$color-d-gr-1: shade(adjust-saturation($color-d-1,$color-gray-saturation),16);
$color-d-gr-2: shade(adjust-saturation($color-d-1,$color-gray-saturation),33);
$color-d-gr-3: shade(adjust-saturation($color-d-1,$color-gray-saturation),50);
$color-d-gr-4: shade(adjust-saturation($color-d-1,$color-gray-saturation),60);

// Blacks and whites //

$color-gr-1: shade(white,(1/8*10));
$color-gr-2: shade(white,(2/8*10));
$color-gr-3: shade(white,(3/8*15));
$color-gr-4: shade(white,(4/8*20));
$color-gr-5: shade(white,(5/8*25));
$color-gr-6: shade(white,(6/8*30));
$color-gr-7: shade(white,(7/8*35));
$color-gr-8: shade(white,(8/8*40));

$color-dgr-1: shade(white, 25);
$color-dgr-2: shade(white, 50);
$color-dgr-3: shade(white, 75);
$color-dgr-4: shade(white, 90);

$color-bl-1: shade(white,90);
$color-bl-2: shade(white,91);
$color-bl-3: shade(white,92);
$color-bl-4: shade(white,93);
$color-bl-5: shade(white,94);
$color-bl-6: shade(white,95);
$color-bl-7: shade(white,96);
$color-bl-8: shade(white,97);

// Color mastering helpers //

[class*="color-a"] { color: $color-a-bl }
[class*="color-b"] { color: $color-b-bl }
[class*="color-c"] { color: $color-c-bl }
[class*="color-d"] { color: $color-d-bl }

// Color wrapper //

.colors {
  color: rgba(white,0.25);
  text-shadow: 0px 0px rgba(black,0.5);
  & span { padding: 24px; }
  &.rainbow {text-align: center; color: white; }
}

// Rainbow things //
.red    { background: $red; }
.orange { background: $orange; }
.yellow { background: $yellow; }
.green  { background: $green; }
.blue   { background: $blue; }
.indigo { background: $indigo; }
.violet { background: $violet; }

.red-wh    { background: scale-lightness($red,   20); }
.orange-wh { background: scale-lightness($orange,20); }
.yellow-wh { background: scale-lightness($yellow,20); }
.green-wh  { background: scale-lightness($green, 20); }
.blue-wh   { background: scale-lightness($blue,  20); }
.indigo-wh { background: scale-lightness($indigo,20); }
.violet-wh { background: scale-lightness($violet,20); }

.red-bl    { background: shade($red,   15); }
.orange-bl { background: shade($orange,15); }
.yellow-bl { background: shade($yellow,15); }
.green-bl  { background: shade($green, 15); }
.blue-bl   { background: shade($blue,  15); }
.indigo-bl { background: shade($indigo,15); }
.violet-bl { background: shade($violet,15); }

// Shades of gray //
.color-gr-1 { background: $color-gr-1; }
.color-gr-2 { background: $color-gr-2; }
.color-gr-3 { background: $color-gr-3; }
.color-gr-4 { background: $color-gr-4; }
.color-gr-5 { background: $color-gr-5; }
.color-gr-6 { background: $color-gr-6; }
.color-gr-7 { background: $color-gr-7; }
.color-gr-8 { background: $color-gr-8; }

// Dark shades of gray //
.color-dgr-1 { background: $color-dgr-1; }
.color-dgr-2 { background: $color-dgr-2; }
.color-dgr-3 { background: $color-dgr-3; }
.color-dgr-4 { background: $color-dgr-4; }

// Shades of black
.color-bl-1 { background: $color-bl-1; }
.color-bl-2 { background: $color-bl-2; }
.color-bl-3 { background: $color-bl-3; }
.color-bl-4 { background: $color-bl-4; }
.color-bl-5 { background: $color-bl-5; }
.color-bl-6 { background: $color-bl-6; }
.color-bl-7 { background: $color-bl-7; }
.color-bl-8 { background: $color-bl-8; }

// Color A //
.color-a-1 { background: $color-a-1; }
.color-a-2 { background: $color-a-2; }
.color-a-3 { background: $color-a-3; }
.color-a-4 { background: $color-a-4; }
.color-a-5 { background: $color-a-5; }
.color-a-6 { background: $color-a-6; }
.color-a-bl { background: $color-a-bl; color: $color-a-wh; }
.color-a-wh { background: $color-a-wh; }
.color-a-gr-1 { background: $color-a-gr-1; }
.color-a-gr-2 { background: $color-a-gr-2; }
.color-a-gr-3 { background: $color-a-gr-3; }
.color-a-gr-4 { background: $color-a-gr-4; }

// Color B //
.color-b-1 { background: $color-b-1; }
.color-b-2 { background: $color-b-2; }
.color-b-3 { background: $color-b-3; }
.color-b-4 { background: $color-b-4; }
.color-b-5 { background: $color-b-5; }
.color-b-6 { background: $color-b-6; }
.color-b-bl { background: $color-b-bl; color: $color-b-wh; }
.color-b-wh { background: $color-b-wh; }
.color-b-gr-1 { background: $color-b-gr-1; }
.color-b-gr-2 { background: $color-b-gr-2; }
.color-b-gr-3 { background: $color-b-gr-3; }
.color-b-gr-4 {background: $color-b-gr-4; }

// Color C //
.color-c-1 { background: $color-c-1; }
.color-c-2 { background: $color-c-2; }
.color-c-3 { background: $color-c-3; }
.color-c-4 { background: $color-c-4; }
.color-c-5 { background: $color-c-5; }
.color-c-6 { background: $color-c-6; }
.color-c-bl { background: $color-c-bl; color: $color-c-wh; }
.color-c-wh { background: $color-c-wh; }
.color-c-gr-1 { background: $color-c-gr-1; }
.color-c-gr-2 { background: $color-c-gr-2; }
.color-c-gr-3 { background: $color-c-gr-3; }
.color-c-gr-4 { background: $color-c-gr-4; }

// Color D //
.color-d-1 { background: $color-d-1; }
.color-d-2 { background: $color-d-2; }
.color-d-3 { background: $color-d-3; }
.color-d-4 { background: $color-d-4; }
.color-d-5 { background: $color-d-5; }
.color-d-6 { background: $color-d-6; }
.color-d-bl { background: $color-d-bl; color: $color-d-wh; }
.color-d-wh { background: $color-d-wh; }
.color-d-gr-1 { background: $color-d-gr-1; }
.color-d-gr-2 { background: $color-d-gr-2; }
.color-d-gr-3 { background: $color-d-gr-3; }
.color-d-gr-4 { background: $color-d-gr-4; }